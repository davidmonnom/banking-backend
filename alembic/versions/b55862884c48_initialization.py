"""Initialization

Revision ID: b55862884c48
Revises: 
Create Date: 2024-02-24 18:16:38.899308

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b55862884c48'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('externalId', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('darkMode', sa.Boolean(), nullable=True),
    sa.Column('isAdmin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('externalId')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_provider'), 'users', ['provider'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('userOwnerId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userOwnerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('startMonth', sa.String(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budgets_id'), 'budgets', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('dateEnd', sa.String(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goals_id'), 'goals', ['id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('itemId', sa.String(), nullable=True),
    sa.Column('accessToken', sa.String(), nullable=True),
    sa.Column('publicToken', sa.String(), nullable=True),
    sa.Column('institutionId', sa.String(), nullable=True),
    sa.Column('institutionName', sa.String(), nullable=True),
    sa.Column('webhook', sa.String(), nullable=True),
    sa.Column('updateDate', sa.String(), nullable=True),
    sa.Column('lastFailedUpdate', sa.String(), nullable=True),
    sa.Column('expirationDate', sa.String(), nullable=True),
    sa.Column('cursor', sa.String(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('itemId')
    )
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accountId', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('mask', sa.String(), nullable=True),
    sa.Column('officialName', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('subtype', sa.String(), nullable=True),
    sa.Column('balances', sa.Float(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.Column('itemId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['itemId'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('accountId')
    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transactionId', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('merchantName', sa.String(), nullable=True),
    sa.Column('merchantWebsite', sa.String(), nullable=True),
    sa.Column('merchantEntityId', sa.String(), nullable=True),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('isoCurrencyCode', sa.String(), nullable=True),
    sa.Column('groupId', sa.Integer(), nullable=True),
    sa.Column('accountId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accountId'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['groupId'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transactionId')
    )
    op.create_index(op.f('ix_transactions_accountId'), 'transactions', ['accountId'], unique=False)
    op.create_index(op.f('ix_transactions_date'), 'transactions', ['date'], unique=False)
    op.create_index(op.f('ix_transactions_groupId'), 'transactions', ['groupId'], unique=False)
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('transaction_budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transactionId', sa.Integer(), nullable=True),
    sa.Column('budgetId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['budgetId'], ['budgets.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transactionId'], ['transactions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transactionId', sa.Integer(), nullable=True),
    sa.Column('categoryId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoryId'], ['categories.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transactionId'], ['transactions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transactionId', sa.Integer(), nullable=True),
    sa.Column('goalId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['goalId'], ['goals.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transactionId'], ['transactions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_goals')
    op.drop_table('transaction_categories')
    op.drop_table('transaction_budgets')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_groupId'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_accountId'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_table('user_groups')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_goals_id'), table_name='goals')
    op.drop_table('goals')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_budgets_id'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_users_provider'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
